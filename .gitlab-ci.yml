stages:
  - lint
  - build

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

lint_commit_messages:
  image: ubuntu:latest
  stage: lint
  before_script:
    - apt-get -y update
    - apt-get -y install git
  script:
    - git fetch
    - FAILED=""
    - "SUBJECTS=$(git log --pretty=%s origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME..HEAD)"
    - "SUBJECTS_REGEX='^(BREAK|FEAT|FIX|FORMAT|DOCS|TEST|MAINT|CI|REFAC|BUILD|TRANSLATION|CHANGE|REVERT): .*$'"
    - "while IFS= read -r line; do if [[ \"$line\" =~ $SUBJECTS_REGEX ]]; then echo \"passed '$line'\"; else echo \"failed '$line'\"; FAILED=\"$FAILED,$line\"; fi; done <<< \"$SUBJECTS\""
    - "if [[ -n \"$FAILED\" ]]; then echo \"$FAILED\"; exit 1; fi;"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: always
    - when: never

lint_clang_format:
  image: xianpengshen/clang-tools:16
  stage: lint
  before_script:
    - apt-get -y update
    - apt-get -y install git
  script:
    - ls -lah
    - clang-format -i src/*.c
    - clang-format -i src/*.h
    - clang-format -i examples/*.c
    - clang-format -i include/*.h
    - git diff --exit-code
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: always
    - when: never

test_build:
  image: ubuntu:latest
  stage: build
  before_script:
    - apt-get -y update
    - apt-get -y install build-essential cmake
  script:
    - echo "Build renamenoise"
    - cmake .
    - make
    - echo "Apply noise suppression to test sample"
    - ./examples/renamenoise_demo ./sample/babble_15dB.pcm ./sample/renamenoise_babble_15dB.pcm
    - sha1sum -c --strict ./sample/CHECKSUMS
    - echo "Check exported symbols"
    - FAILED=""
    - EXPORTED_SYMBOLS=$(nm ./librenamenoise.a | awk '/ T / {print $3}' | sort)
    - "SYMBOL_REGEX='^_?renamenoise.*$'"
    - "while IFS= read -r line; do if [[ \"$line\" =~ $SYMBOL_REGEX ]]; then echo \"passed '$line'\"; else echo \"failed '$line'\"; FAILED=\"$FAILED,$line\"; fi; done <<< \"$EXPORTED_SYMBOLS\""
    - "if [[ -n \"$FAILED\" ]]; then echo \"$FAILED\"; exit 1; fi;"

test_build_no_vla:
  image: ubuntu:latest
  stage: build
  before_script:
    - apt-get -y update
    - apt-get -y install build-essential cmake
  script:
    - echo "Build renamenoise"
    - export CFLAGS="-DRENAMENOISE_NO_VLA=1 -Werror=vla"
    - cmake .
    - make
    - echo "Apply noise suppression to test sample"
    - ./examples/renamenoise_demo ./sample/babble_15dB.pcm ./sample/renamenoise_babble_15dB.pcm
    - sha1sum -c --strict ./sample/CHECKSUMS

test_benchmark:
  image: ubuntu:latest
  stage: build
  before_script:
    - apt-get -y update
    - apt-get -y install build-essential cmake
  script:
    - echo "Build renamenoise"
    - cmake -DRENAMENOISE_DEMO_EXECUTABLE=OFF -DRENAMENOISE_BENCHMARK_EXECUTABLE=ON .
    - make
    - echo "Benchmark"
    - ./examples/renamenoise_benchmark
