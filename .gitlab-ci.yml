stages:
  - lint
  - build

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

lint_commit_messages:
  image: ubuntu:latest
  stage: lint
  before_script:
    - apt-get -y update
    - apt-get -y install git
  script:
    - bash ./.ci/lint_commits.sh "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: always
    - when: never

lint_clang_format:
  image: xianpengshen/clang-tools:16
  stage: lint
  before_script:
    - apt-get -y update
    - apt-get -y install git
  script:
    - ls -lah
    - clang-format -i src/*.c
    - clang-format -i src/*.h
    - clang-format -i examples/*.c
    - clang-format -i include/*.h
    - git diff --exit-code
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: always
    - when: never

test_build:
  image: ubuntu:latest
  stage: build
  before_script:
    - apt-get -y update
    - apt-get -y install build-essential cmake
  script:
    - bash ./.ci/test_build.sh

test_build_no_vla:
  image: ubuntu:latest
  stage: build
  before_script:
    - apt-get -y update
    - apt-get -y install build-essential cmake
  script:
    - bash ./.ci/test_build_novla.sh

test_benchmark:
  image: ubuntu:latest
  stage: build
  before_script:
    - apt-get -y update
    - apt-get -y install build-essential cmake
  script:
    - bash ./.ci/test_benchmark.sh
